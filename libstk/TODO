MEETING TOPICS
==============
- discuss surfaces: creation, blitting, etc.
- tab stops
- should we use rectangle::ptr, string::ptr, etc everywhere?  it is awkward to have 
      a method receive a "const rectangle&" and a "image::ptr"


TASKS (Some duplicated items here and below)
============================================
Spinner
    RFC (dvhart): should spinner really derive from list ?
Numeric Spinner
    RFC (dvhart): should we derive from spinner, or create new ?
List Item Height
    RFC (dvhart): height is not part of list_item, it is determined by the 
    draw routine based on the size of the font.  In a subclass list_item
    (like list_item_image) its corresponding draw routine will determine
    the appropriate height based on font size and image height.  Padding may
    be a const int in the theme itself. 
Purge all magic numbers
Convert all output to new logger
remove tab stop code (maybe add in libstk 2.0, not really critical)
    DONE: dvhart
Scrollbars
Scrollbox
Edit Box
Combo Box
Text Area
Markup Area (simple html renderer ?)
Surface blitting / locking / creation (from app surface ?)
rectangle& or rectangle::ptr
input capabilities
list item data type (what should it be, if anything)
    RFC (dvhart): what if we made list_item templated ?
    we would have to make list,combo,spinner etc. templated as well
    what about using a list_model ala:
        http://java.sun.com/j2se/1.4.1/docs/api/javax/swing/ListModel.html
        http://java.sun.com/j2se/1.4.1/docs/api/javax/swing/JList.html
widget regions (define in theme, check in handle_event() on pointer
    click, ie UP_ARROW, DOWN_ARROW, TEXT_BOX)
    DONE: dvhart
Image (png loader, own surface, blit)
Video Panel
surface_fbdev
event_producer_linux
IR support (IRDA / generic serial ?)
Software Pointer (common to all graphic backends)
Finalize font interface / implementation
Document all existing classes / APIs
Polish the build environment 

DOCUMENTATION
=============
dependecy / compile instructions
decide on a format
ie:
    /// This is a brief description, until the dot.
    /// This is a detailed description of the entity immmediately
    /// below these lines of the description
    class|function { }
write it!!!!

OTHER
======
png image loader - Marc
input_capabilities - Marc
Better font loading error messages.
list::create(boost::shared_ptr< list > parent, std::wstring label, std::string data)
    we are mixing std::string and std::wstring here, 
We shouldnt be using a string for "data" anyway!!! (marc)

WIDGETS TO WRITE
================
combo - Darren
numeric_spinner - Darren
edit_box - Dirk
scroll_bar - Marc
text_area
uberscript_panel (support for HTML, perhaps more strict... XHTML ?)
OSD keyboard - Marc

MEDIA WIDGETS
=============
??

INTERESTED USERS
================
tyler@harmor.org (Tyler - from Jeremy's)

